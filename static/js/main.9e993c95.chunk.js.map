{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","react_default","a","createElement","Fragment","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","className","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","_useCollectionData","useCollectionData","idField","messages","Object","slicedToArray","_useState","useState","_useState2","formValue","setFormValue","sendMessage","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_auth$currentUser","uid","photoURL","wrap","_context","prev","next","preventDefault","add","text","createAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","stop","_x","apply","this","arguments","map","msg","ChatMessage","key","id","message","onSubmit","value","onChange","target","placeholder","type","props","_props$message","messageClass","concat","src","App","_useAuthState","useAuthState","user","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"yiNAWAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAuB3B,SAASC,IAOP,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAQE,QAPa,WACvB,IAAMC,EAAW,IAAIjB,IAASS,KAAKS,mBACnCT,EAAKU,gBAAgBF,KAKnB,0FAKN,SAASG,IACP,OAAQX,EAAKY,aACXT,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,WAAWN,QAAS,kBAAMP,EAAKc,YAAjD,YAIJ,SAASC,IAEP,IAAMC,EAAQC,mBAERC,EAAcjB,EAAUkB,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,YAAYC,MAAM,IALlCC,EAOCC,YAAkBJ,EAAO,CAACK,QAAS,OAA/CC,EAPWC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,MAAAM,EASgBC,mBAAS,IATzBC,EAAAJ,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GASXG,EATWD,EAAA,GASAE,EATAF,EAAA,GAWZG,EAAW,eAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,IAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClBP,EAAEQ,iBADgBP,EAGOzC,EAAKY,YAAtB8B,EAHUD,EAGVC,IAAKC,EAHKF,EAGLE,SAHKE,EAAAE,KAAA,EAKZ7B,EAAY+B,IAAI,CAEpBC,KAAMlB,EACNmB,SAAU5D,IAASU,UAAUmD,WAAWC,kBACxCX,MACAC,aAVgB,OAalBV,EAAa,IAEbjB,EAAMsC,QAAQC,eAAe,CAAEC,SAAU,WAfvB,wBAAAX,EAAAY,SAAAlB,MAAH,gBAAAmB,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,GAkBjB,OACE1D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,WACGqB,GAAYA,EAASoC,IAAI,SAAAC,GAAG,OAAI5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAaC,IAAKF,EAAIG,GAAIC,QAASJ,OAGtE5D,EAAAC,EAAAC,cAAA,QAAM+D,SAAUlC,GAGhB/B,EAAAC,EAAAC,cAAA,SAAOgE,MAAOrC,EAAWsC,SAAU,SAAC9B,GAAD,OAAOP,EAAaO,EAAE+B,OAAOF,QAC9DG,YAAY,uBAGdrE,EAAAC,EAAAC,cAAA,UAAQoE,KAAK,UAAb,UAQN,SAAST,EAAYU,GAAO,IAAAC,EACID,EAAMP,QAA7BjB,EADmByB,EACnBzB,KAAMR,EADaiC,EACbjC,IAAKC,EADQgC,EACRhC,SAEZiC,EAAelC,IAAQ1C,EAAKY,YAAY8B,IAAM,OAAS,WAE7D,OACEvC,EAAAC,EAAAC,cAAA,OAAKQ,UAAS,WAAAgE,OAAaD,IAEzBzE,EAAAC,EAAAC,cAAA,OAAKyE,IAAKnC,IAEVxC,EAAAC,EAAAC,cAAA,SAAI6C,IAMK6B,MA3Gf,WAAe,IAAAC,EAEEC,YAAajF,GAArBkF,EAFMvD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,MAIb,OACE7E,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OAEfV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,cACdV,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACM,EAAD,QAGFR,EAAAC,EAAAC,cAAA,eACG6E,EAAO/E,EAAAC,EAAAC,cAACU,EAAD,MAAcZ,EAAAC,EAAAC,cAACH,EAAD,SC1BfiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA9C,EAAA,GAAA+C,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAApD,GAAiD,IAA9CsD,EAA8CtD,EAA9CsD,OAAQC,EAAsCvD,EAAtCuD,OAAQC,EAA8BxD,EAA9BwD,OAAQC,EAAsBzD,EAAtByD,OAAQC,EAAc1D,EAAd0D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/F,EAAAC,EAAAC,cAACF,EAAAC,EAAM+F,WAAP,KACEhG,EAAAC,EAAAC,cAAC+F,EAAD,QAOJjB","file":"static/js/main.9e993c95.chunk.js","sourcesContent":["import {useState, useRef} from 'react';\nimport React from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/compat/app'; \n     import 'firebase/compat/firestore';\n     import 'firebase/compat/auth';   \n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCcFhLiXX8ulInqA2kGqWK6xopkI0xU1Ug\",\n  authDomain: \"chat-app-dcaf1.firebaseapp.com\",\n  projectId: \"chat-app-dcaf1\",\n  storageBucket: \"chat-app-dcaf1.appspot.com\",\n  messagingSenderId: \"305953239821\",\n  appId: \"1:305953239821:web:71dad4bad14822272f7644\",\n  measurementId: \"G-265R0NTDW3\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n    \n    <>\n    <header className=\"App-header\">\n        <h1>üí¨</h1>\n        <SignOut/>\n      </header>\n    </>\n      <section>\n        {user ? <ChatRoom/> : <SignIn/>}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button onClick= {signInWithGoogle}>ƒêƒÉng nh·∫≠p b·∫±ng Google ƒë·ªÉ chat v·ªõi Tu·∫•n Anh ^^</button>\n    </>\n  )\n}\n\nfunction SignOut() {\n  return (auth.currentUser && (\n    <button className='sign-out' onClick={() => auth.signOut()}>Sign Out</button>\n  ))\n}\n\nfunction ChatRoom() {\n\n  const dummy = useRef()\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createAt').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n\n    const { uid, photoURL} = auth.currentUser;\n\n    await messagesRef.add({\n\n      text: formValue, \n      createAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n\n    setFormValue('');\n\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <>\n      <div>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n      </div>\n\n      <form onSubmit={sendMessage}>\n\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} \n        placeholder=\"say something nice\"\n      />\n\n      <button type=\"submit\">Sent</button>\n\n      </form>\n\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const {text, uid, photoURL} = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${messageClass}`}>\n\n      <img src={photoURL}/>\n\n      <p>{text}</p>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}